name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Validate Secrets
        run: |
          if [[ -z "${{ secrets.MONGODB_URI }}" || -z "${{ secrets.JWT_SECRET }}" || -z "${{ secrets.DB_NAME }}" ]]; then
            echo "Missing required secrets. Check your repository settings."
            exit 1
          fi

      - name: Install dependencies
        run: go mod tidy

      - name: Run unit tests and collect coverage
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          go test -v -coverprofile=coverage.out ./...

  snyk-test:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Snyk monitor
        run: snyk test
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  sonarqube-analysis:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build:
    needs: [sonarqube-analysis, snyk-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Debug Docker Tag
        run: echo "Docker tag ${{ secrets.DOCKERHUB_USERNAME }}/auth-ms:latest"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/auth-ms:latest
          cache-to: type=inline
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/auth-ms:latest
          build-args: |
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DB_NAME=${{ secrets.DB_NAME }}

      - name: Verify Docker image
        run: docker images

      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/auth-ms:latest
          args: --file=Dockerfile
        continue-on-error: true
